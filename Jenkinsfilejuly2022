node{
    
def mavenHome = tool name:"maven3.8.5"
echo "Jenkins url is: ${env. JENKINS_URL}"
echo "Node Name is: ${env. NODE_NAME}"
echo "Job Name is: ${env. JOB_NAME}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
try{
slackNotifications('STARTED')
stage('CheckOutCode'){
git branch: 'development', credentialsId: 'ba64e169-1edc-4f20-92ef-e890027ded6c', url: 'https://github.com/shapura-begum-devOps/maven-web-application.git'
}
stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}
/*
stage('ExecuteSonarQubeReport'){
sh "${mavenHome }/bin/mvn clean sonar:sonar"
}

stage('UploadArtifactsIntoArtifactoryRepo'){
sh "${mavenHome }/bin/mvn clean deploy"
}

stage('DeployAppIntoTomcatServer'){
sshagent(['56f945ac-d152-4dab-9662-99ba47343bad']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war  ec2-user@172.31.34.61:/opt/apache-tomcat-9.0.65/webapps/"
    
}
}
*/
}//try block closing...
catch (e){
slackNotifications('FAILED')
throw e	
}
finally {
slackNotifications(currentBuild.result)
}


}//Node closing

//Code snippet for sending sla]ck notifications.


def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName= 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}

